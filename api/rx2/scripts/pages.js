var pages = [{"name":"abstract class CompletableAction<State : Any> : Action<State> ","description":"se.gustavkarlsson.conveyor.rx2.CompletableAction","location":"rx2/se.gustavkarlsson.conveyor.rx2/-completable-action/index.html","searchKeys":["CompletableAction","abstract class CompletableAction<State : Any> : Action<State> "]},{"name":"fun CompletableAction()","description":"se.gustavkarlsson.conveyor.rx2.CompletableAction.CompletableAction","location":"rx2/se.gustavkarlsson.conveyor.rx2/-completable-action/-completable-action.html","searchKeys":["CompletableAction","fun CompletableAction()"]},{"name":"suspend override fun execute(state: UpdatableStateFlow<State>)","description":"se.gustavkarlsson.conveyor.rx2.CompletableAction.execute","location":"rx2/se.gustavkarlsson.conveyor.rx2/-completable-action/execute.html","searchKeys":["execute","suspend override fun execute(state: UpdatableStateFlow<State>)"]},{"name":"interface RxStore<State : Any> : ActionIssuer<State> ","description":"se.gustavkarlsson.conveyor.rx2.RxStore","location":"rx2/se.gustavkarlsson.conveyor.rx2/-rx-store/index.html","searchKeys":["RxStore","interface RxStore<State : Any> : ActionIssuer<State> "]},{"name":"abstract val disposable: Disposable?","description":"se.gustavkarlsson.conveyor.rx2.RxStore.disposable","location":"rx2/se.gustavkarlsson.conveyor.rx2/-rx-store/disposable.html","searchKeys":["disposable","abstract val disposable: Disposable?"]},{"name":"abstract fun start(scope: CoroutineScope = GlobalScope): Disposable","description":"se.gustavkarlsson.conveyor.rx2.RxStore.start","location":"rx2/se.gustavkarlsson.conveyor.rx2/-rx-store/start.html","searchKeys":["start","abstract fun start(scope: CoroutineScope = GlobalScope): Disposable"]},{"name":"abstract val state: StateFlowable<State>","description":"se.gustavkarlsson.conveyor.rx2.RxStore.state","location":"rx2/se.gustavkarlsson.conveyor.rx2/-rx-store/state.html","searchKeys":["state","abstract val state: StateFlowable<State>"]},{"name":"abstract class StateFlowable<State : Any> : Flowable<State> ","description":"se.gustavkarlsson.conveyor.rx2.StateFlowable","location":"rx2/se.gustavkarlsson.conveyor.rx2/-state-flowable/index.html","searchKeys":["StateFlowable","abstract class StateFlowable<State : Any> : Flowable<State> "]},{"name":"fun StateFlowable()","description":"se.gustavkarlsson.conveyor.rx2.StateFlowable.StateFlowable","location":"rx2/se.gustavkarlsson.conveyor.rx2/-state-flowable/-state-flowable.html","searchKeys":["StateFlowable","fun StateFlowable()"]},{"name":"abstract val value: State","description":"se.gustavkarlsson.conveyor.rx2.StateFlowable.value","location":"rx2/se.gustavkarlsson.conveyor.rx2/-state-flowable/value.html","searchKeys":["value","abstract val value: State"]},{"name":"abstract val value: State","description":"se.gustavkarlsson.conveyor.rx2.UpdatableStateFlowable.value","location":"rx2/se.gustavkarlsson.conveyor.rx2/-updatable-state-flowable/value.html","searchKeys":["value","abstract val value: State"]},{"name":"abstract class UpdatableStateFlowable<State : Any> : StateFlowable<State> ","description":"se.gustavkarlsson.conveyor.rx2.UpdatableStateFlowable","location":"rx2/se.gustavkarlsson.conveyor.rx2/-updatable-state-flowable/index.html","searchKeys":["UpdatableStateFlowable","abstract class UpdatableStateFlowable<State : Any> : StateFlowable<State> "]},{"name":"fun UpdatableStateFlowable()","description":"se.gustavkarlsson.conveyor.rx2.UpdatableStateFlowable.UpdatableStateFlowable","location":"rx2/se.gustavkarlsson.conveyor.rx2/-updatable-state-flowable/-updatable-state-flowable.html","searchKeys":["UpdatableStateFlowable","fun UpdatableStateFlowable()"]},{"name":"abstract val subscriptionCount: StateFlowable<Int>","description":"se.gustavkarlsson.conveyor.rx2.UpdatableStateFlowable.subscriptionCount","location":"rx2/se.gustavkarlsson.conveyor.rx2/-updatable-state-flowable/subscription-count.html","searchKeys":["subscriptionCount","abstract val subscriptionCount: StateFlowable<Int>"]},{"name":"abstract fun update(block: State.() -> Single<State>): Single<State>","description":"se.gustavkarlsson.conveyor.rx2.UpdatableStateFlowable.update","location":"rx2/se.gustavkarlsson.conveyor.rx2/-updatable-state-flowable/update.html","searchKeys":["update","abstract fun update(block: State.() -> Single<State>): Single<State>"]},{"name":"abstract fun updateBlocking(block: State.() -> State): State","description":"se.gustavkarlsson.conveyor.rx2.UpdatableStateFlowable.updateBlocking","location":"rx2/se.gustavkarlsson.conveyor.rx2/-updatable-state-flowable/update-blocking.html","searchKeys":["updateBlocking","abstract fun updateBlocking(block: State.() -> State): State"]},{"name":"fun <State : Any> Store<State>.asRxStore(): RxStore<State>","description":"se.gustavkarlsson.conveyor.rx2.asRxStore","location":"rx2/se.gustavkarlsson.conveyor.rx2/as-rx-store.html","searchKeys":["asRxStore","fun <State : Any> Store<State>.asRxStore(): RxStore<State>"]},{"name":"fun <State : Any> ActionIssuer<State>.issue(block: (state: UpdatableStateFlowable<State>) -> Completable)","description":"se.gustavkarlsson.conveyor.rx2.issue","location":"rx2/se.gustavkarlsson.conveyor.rx2/issue.html","searchKeys":["issue","fun <State : Any> ActionIssuer<State>.issue(block: (state: UpdatableStateFlowable<State>) -> Completable)"]}]
